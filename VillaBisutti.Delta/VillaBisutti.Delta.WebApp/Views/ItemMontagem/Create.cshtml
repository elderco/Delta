@model VillaBisutti.Delta.Core.Model.ItemMontagem

@{
	Layout = null;
    //ViewBag.Title = "Create";
}
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" language="javascript">
	var enviado;
	function Buscar(texto, item) {
		window.clearTimeout(enviado);
		if (texto == undefined)
			texto = "";
		if (item == undefined || isNaN(item)|| item == "")
			item = 0;
		var url = "@Url.Action("Buscar", "ItemMontagem", new { combo="~0", texto="~1" })";
		url = url.replace("~0", item).replace("~1", encodeURI(texto)).replace("&amp;", "&");
		enviado = window.setTimeout("LoadPage(\"" + url + "\", \"ResultView\");", 1000);
		
	}
	$(document).ready(function () {
		$("#EditarTipoMontagem").attr("disabled", "disabled");
		$("#ExcluirTipoMontagem").attr("disabled", "disabled");
		$("#TipoItemMontagemId").change(function () {
			var id = $(this).val();
			if (id == "") {
				$("#EditarTipoMontagem").attr("disabled", "disabled");
				$("#ExcluirTipoMontagem").attr("disabled", "disabled");
			} else {
			    $("#EditarTipoMontagem").removeAttr("disabled");
			    $("#ExcluirTipoMontagem").removeAttr("disabled");
			}
			var urlEditar = "@(Url.Action("Edit", "TipoItemMontagem"))/";
			var urlDeletar = "@(Url.Action("Delete", "TipoItemMontagem"))/";
		    $("#EditarTipoMontagem").click(function () {
				ShowPopUp(urlEditar + id, "Editar tipo de item de montagem", 790);
			});
		    $("#ExcluirTipoMontagem").click(function () {
				ShowPopUp(urlDeletar + id, "Excluir tipo de item de montagem", 790);
		    });
		    Buscar($("#Nome").val(), $("#TipoItemMontagemId").val());
		});
		$("#Nome").keyup(function () {
			if($(this).val().length > 3)
				Buscar($("#Nome").val(), $("#TipoItemMontagemId").val());
		});
		PreventNegativeNumbers("Quantidade");
		Buscar($("#Nome").val(), $("#TipoItemMontagemId").val());
	});
</script>


@using (Html.BeginForm("ItemCreated","ItemMontagem")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Configuração de itens de Montagem</h4>
        <hr />
        @Html.ValidationSummary(true)

		<div class="form-group col-md-6">
			@Html.LabelFor(model => model.TipoItemMontagem, new { @class = "control-label col-md-4" })
			<div class="col-md-2">
				@Html.DropDownList("TipoItemMontagemId", (IEnumerable<SelectListItem>)ViewBag.TipoItemMontagem, string.Empty, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.TipoItemMontagem)
			</div>
			<div class="col-md-6">
				<a href="@(Url.Action("Create", "TipoItemMontagem"))" class="btn btn-sm btn-default PopUpActionLinks" id="CriarTipoItem"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Criar</a>
				<a href="javascript:void(0);" class="btn btn-sm btn-default" id="EditarTipoItem"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Editar</a>
				<a href="javascript:void(0);" class="btn btn-sm btn-default" id="ExcluirTipoItem"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Excluir</a>
			</div>
		</div>

		<div class="form-group col-md-6">
			@Html.LabelFor(model => model.Nome, new { @class = "control-label col-md-4" })
			<div class="col-md-8">
				@Html.EditorFor(model => model.Nome)
				@Html.ValidationMessageFor(model => model.Nome)
			</div>
		</div>

		<div class="form-group col-md-6">
			@Html.LabelFor(model => model.Quantidade, new { @class = "control-label col-md-4" })
			<div class="col-md-8">
				@Html.EditorFor(model => model.Quantidade)
				@Html.ValidationMessageFor(model => model.Quantidade)
			</div>
		</div>

		<div class="form-group col-md-6">
			<div class="col-md-offset-4 col-md-8">
				<input type="submit" value="Salvar" class="btn btn-default form-control" />
			</div>
		</div>
    </div>
}
<div class="clear-fix"></div>
<div id="ResultView" class="row col-sm-12">

</div>