@model VillaBisutti.Delta.Core.Model.ItemMontagem

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ItemMontagem</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome)
                @Html.ValidationMessageFor(model => model.Nome)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantidade, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantidade)
                @Html.ValidationMessageFor(model => model.Quantidade)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoItemMontagem, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoItemMontagemId", (IEnumerable<SelectListItem>)ViewBag.TipoItemMontagem, String.Empty)
                @Html.ValidationMessageFor(model => model.TipoItemMontagem)

				<a href="@(Url.Action("create", "tipoitemmontagem"))" class="btn btn-default criartipoitem"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> criar</a>
				<a class="btn btn-default editartipoitem"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> editar</a>
				<a class="btn btn-default excluirtipoitem"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> excluir</a>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
