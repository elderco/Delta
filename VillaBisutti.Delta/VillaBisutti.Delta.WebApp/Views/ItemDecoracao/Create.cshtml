@model VillaBisutti.Delta.Core.Model.ItemDecoracao

@{
	ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
<<<<<<< HEAD
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>ItemDecoracao</h4>
		<hr />
		@Html.ValidationSummary(true)

		<div class="form-group">
			@Html.LabelFor(model => model.Nome, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Nome)
				@Html.ValidationMessageFor(model => model.Nome)
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Quantidade, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Quantidade)
				@Html.ValidationMessageFor(model => model.Quantidade)
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.TipoItemDecoracao, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("TipoItemDecoracaoId", (IEnumerable<SelectListItem>)ViewBag.Caetano, String.Empty)
				@Html.ValidationMessageFor(model => model.TipoItemDecoracao)

				<a href="@(Url.Action("Create", "TipoItemDecoracao"))" class="btn btn-default CriarTipoItem"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Criar</a>
				<a class="btn btn-default EditarTipoItem"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Editar</a>
				<a class="btn btn-default ExcluirTipoItem"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Excluir</a>
=======
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ItemDecoracao</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome)
                @Html.ValidationMessageFor(model => model.Nome)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantidade, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantidade)
                @Html.ValidationMessageFor(model => model.Quantidade)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoItemDecoracao, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoItemDecoracaoId", (IEnumerable<SelectListItem>)ViewBag.TipoItemDecoracao, String.Empty)
                @Html.ValidationMessageFor(model => model.TipoItemDecoracao)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
			<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
>>>>>>> origin/master
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
<<<<<<< HEAD
		</div>
	</div>
=======
        </div>
>>>>>>> origin/master
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
